Kasha
Dasha Shifrina
Karina Ionkina
pd 04
---------------------
Tardy Terminal

choo choo 
  _____                 . . . . . o o o o o
  __|[_]|__ ___________ _______    ____      o
 |[] [] []| [] [] [] [] [_____(__  ][]]_n_n__][.
_|________|_[_________]_[________]_|__|________)<
  oo    oo 'oo      oo ' oo    oo 'oo 0000---oo\_
 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


/////////// Zone of Reflection \\\\\\\\\\\
------------------------------------------
OBSTACLES OVERCOME
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
wow we so BOSS bc...
We resolved the traveling salesman issue
by making our levels depend on elapsed
time instead of number of steps taken.

UNRESOLVED ISSUES
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
blah blah pesky bug...
maybe some of these will move into the Obs.Ovrcm section...

COOL STUFF LEARNED
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
wow! oo! 
!!!THE TRAVELING SALESMAN PROBLEM!!!
Strings can change the appearance of words
on terminal and clear the screen, which is 
really cool and helped out project a lot; 
otherwise, our board would have been 
reprinting itself like it was in our MVP...


MID-DEVELOPMENT DESIGN CHANGES
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
we realized we could not calculate the
fastest possible way to pick up all the 
passengers and get to the terminal, so 
we made all of our levels dependent on 
time instead of steps. 


LESSONS LEARNED
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tales of wisdom gained...
1) We learned during our sleepover that sleep
is necessary for basic thinking
2) After spending an hour attempting to figure
out what was wrong with our code and raging, 
we realized it was a tiny error in our
Board.java constructor and learned not to
REDECLARE AN INSTANCE VARIBALE IN THE DARN CONSTRUCTOR
3)github is awesome


 ______   ______   __   __   __       ______   _______     
/_____/\ /_____/\ /_/\ /_/\ /_/\     /_____/\ /______/\    
\:::_ \ \\::::_\/_\:\ \\ \ \\:\ \    \:::_ \ \\::::__\/__  
 \:\ \ \ \\:\/___/\\:\ \\ \ \\:\ \    \:\ \ \ \\:\ /____/\ 
  \:\ \ \ \\::___\/_\:\_/.:\ \\:\ \____\:\ \ \ \\:\\_  _\/ 
   \:\/.:| |\:\____/\\ ..::/ / \:\/___/\\:\_\ \ \\:\_\ \ \ 
    \____/_/ \_____\/ \___/_(   \_____\/ \_____\/ \_____\/ 
==============================================================


2016-01-11
--------------------------------------------------------------
Dasha and Karina:: worked on Woo.java in class, used KtS to 
draw out 2d array algorithm to create a grid
==============================================================

2017-01-12
--------------------------------------------------------------
Dasha and Karina :: began coding grid algorithm in class
Karina :: completed grid algorithm, which uses a 2d object array
with each array representing a coordinate on the grid.
         -Created Passenger and Train class whose toStrings prints a red "%"
and green "@" to represent a passenger and train, respectively
         -addPerson(Object[][] a, int xcor, int ycor): method is used
to populate the grid by creating a passenger object int the 
specified coordinate, and addTrain(a, xcor, ycor)
         -setCords(x, y) : accessor for the Passenger and Train classes
         -moveUp(Object[][] a, int xcor, int ycor): object moves up
one box on the grid
Dasha ::finished moveDown/moveLeft/moveRight(Object[][] a, int xcor, int ycor):
object can now move in any direction
         -catch exceptions if object is attempted to be moved off the board.

*** obstacles to overcome: ***
-The board methods are in a static context, need to make
work in a nonstatic context
-Make terminal reprint board on the same line instead of printing a board out each time.
==============================================================
2017-01-13 Awakeover Part 1
--------------------------------------------------------------
Karina and Dasha :: grid now refreshes in the same spot on terminal
       	   	   -reference file for outside data + Terminal file.
		   - no longer static.
		   - MVP complete.
==============================================================

2016-01-14 Awakeover Part 2
--------------------------------------------------------------
Karina and Dasha :: move around on the board.
       	   	   - pick up passengers and bring them to terminal.
		   - can't finish game unless all passengers are picked up.
		   - quickest path for AI calculated(not actually quickest
		     (but its 1 million dollars).
		   - counts number of steps.
		   - LEVELS!!!
		   - increments of grid.
==============================================================
2016-01-15
--------------------------------------------------------------
Karina:: Added time methods
	 - used System.currentTimeMillis()
	 - created countDown method to make levels harder
==============================================================
2016-01-16
--------------------------------------------------------------
Karina :: perfected time; levels end when time runs out.
==============================================================
2016-01-17
--------------------------------------------------------------
Dasha and Karina :: simple words added to game so user has to enter those to move.
Dasha:: finished method word generator 
==============================================================
2016-01-18
--------------------------------------------------------------
Dasha: updated readme file.
      - superclass BoardPlayers created for Terminal, Passenger, and Train 
        to make gameplay easier.
==============================================================
2016-01-19
--------------------------------------------------------------
Karina: Added confuse() method to word class
	 - uses words such as up, down, left, right to
	 disorient the player
Dasha: patched up superclass/subclass and randomly generated words.
==============================================================
2016-01-22
--------------------------------------------------------------
Karina: Added 5 point deduction for mispelled words
	 - readded colors
	 -perfected confuse() method
	 -added hard difficulty words and methods, updated 
	 general word bank
==============================================================