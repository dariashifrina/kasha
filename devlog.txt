Kasha
Dasha Shifrina
Karina Ionkina
pd 04
---------------------
Tardy Terminal

devlog--
Use keyboard shortcut to jump to end,
 replicate entry template,
 modify appropriately.

zone of reflection--
Flesh out each category whenever necessary, appropriate.
 Need not be fully filled in until end of project,
 but best done as you go along.


/////////// Zone of Reflection \\\\\\\\\\\
------------------------------------------
OBSTACLES OVERCOME
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
wow we so BOSS bc...

UNRESOLVED ISSUES
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
blah blah pesky bug...
maybe some of these will move into the Obs.Ovrcm section...

COOL STUFF LEARNED
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
wow! oo!...

MID-DEVELOPMENT DESIGN CHANGES
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
we changed ___ to ___ bc...

LESSONS LEARNED
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tales of wisdom gained...
||||||||||||||||||||||||||||||||||||||||||



 ______   ______   __   __   __       ______   _______     
/_____/\ /_____/\ /_/\ /_/\ /_/\     /_____/\ /______/\    
\:::_ \ \\::::_\/_\:\ \\ \ \\:\ \    \:::_ \ \\::::__\/__  
 \:\ \ \ \\:\/___/\\:\ \\ \ \\:\ \    \:\ \ \ \\:\ /____/\ 
  \:\ \ \ \\::___\/_\:\_/.:\ \\:\ \____\:\ \ \ \\:\\_  _\/ 
   \:\/.:| |\:\____/\\ ..::/ / \:\/___/\\:\_\ \ \\:\_\ \ \ 
    \____/_/ \_____\/ \___/_(   \_____\/ \_____\/ \_____\/ 
==============================================================


2016-01-11
--------------------------------------------------------------
Dasha and Karina:: worked on Woo.java in class, used KtS to 
draw out 2d array algorithm to create a grid
==============================================================

2017-01-12
--------------------------------------------------------------
Dasha and Karina :: began coding grid algorithm in class
Karina :: completed grid algorithm, which uses a 2d object array
with each array representing a coordinate on the grid.
         -Created Passenger and Train class whose toStrings prints a red "%"
and green "@" to represent a passenger and train, respectively
         -addPerson(Object[][] a, int xcor, int ycor): method is used
to populate the grid by creating a passenger object int the 
specified coordinate, and addTrain(a, xcor, ycor)
         -setCords(x, y) : accessor for the Passenger and Train classes
         -moveUp(Object[][] a, int xcor, int ycor): object moves up
one box on the grid
Dasha ::finished moveDown/moveLeft/moveRight(Object[][] a, int xcor, int ycor):
object can now move in any direction
         -catch exceptions if object is attempted to be moved off the board.

*** obstacles to overcome: ***
-The board methods are in a static context, need to make
work in a nonstatic context
-Make terminal reprint board on the same line instead of printing a board out each time.
==============================================================
2017-01-13 Awakeover Part 1
--------------------------------------------------------------
Karina and Dasha :: grid now refreshes in the same spot on terminal
       	   	   -reference file for outside data + Terminal file.
		   - no longer static.
		   - MVP complete.
==============================================================

2016-01-14 Awakeover Part 2
--------------------------------------------------------------
Karina and Dasha :: move around on the board.
       	   	   - pick up passengers and bring them to terminal.
		   - can't finish game unless all passengers are picked up.
		   - quickest path for AI calculated(not actually quickest
		     (but its 1 million dollars).
		   - counts number of steps.
		   - LEVELS!!!
		   - increments of grid.
==============================================================
2016-01-15
--------------------------------------------------------------
Karina: time methods added. there is a countdown to make playing harder.
==============================================================
2016-01-16
--------------------------------------------------------------
Karina :: perfected time.
==============================================================
